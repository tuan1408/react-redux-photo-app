{"version":3,"file":"static/js/31.2fd0d101.chunk.js","mappings":"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","sources":["components/Banner/index.js","constants/images.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/Main/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","custom-fields/SelectField/index.jsx","components/RandomPhoto/index.js","custom-fields/RandomPhotoField/index.jsx","features/Photo/components/PhotoForm/index.jsx","features/Photo/pages/AddEdit/index.jsx","utils/common.js","features/Photo/index.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: \"\",\r\n  backgroundUrl: \"\",\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import orangeBackground from \"../assets/images/orange-bg.jpg\";\r\nimport blueBackground from \"../assets/images/blue-bg.jpg\";\r\nimport colorfulBackground from \"../assets/images/colorful-bg.jpg\";\r\nimport pinkBackground from \"../assets/images/pink-bg.jpg\";\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground,\r\n};\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./PhotoCard.scss\";\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n};\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) {\r\n      onEditClick(photo);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) {\r\n      onRemoveClick(photo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              outline\r\n              size=\"sm\"\r\n              color=\"danger\"\r\n              onClick={handleRemoveClick}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport PhotoCard from \"../PhotoCard\";\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n  return (\r\n    <Row>\r\n      {photoList.map((photo) => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            onRemoveClick={onPhotoRemoveClick}\r\n            onEditClick={onPhotoEditClick}\r\n            photo={photo}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Banner from \"components/Banner\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Images from \"constants/images\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhotoList from \"features/Photo/components/PhotoList\";\r\nimport { removePhoto } from \"features/Photo/PhotoSlice\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  const photos = useSelector((state) => state.photos);\r\n  const history = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditClick = (photo) => {\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n    history(editPhotoUrl);\r\n  };\r\n\r\n  const handleRemoveClick = (photo) => {\r\n    const removeId = photo.id;\r\n    const action = removePhoto(removeId);\r\n    dispatch(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"Amazing photo\" backgroundUrl={Images.PINK_BG} />\r\n\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n          <Link to=\"add\">Add new photo</Link>\r\n        </div>\r\n\r\n        <PhotoList\r\n          onPhotoRemoveClick={handleRemoveClick}\r\n          onPhotoEditClick={handleEditClick}\r\n          photoList={photos}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Education\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Animals\" },\r\n  { value: 5, label: \"Styles\" },\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n};\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props;\r\n  const { name } = field;\r\n  const { errors, touched } = form;\r\n  const showErrors = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Input\r\n        id={name}\r\n        {...field}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        invalid={showErrors}\r\n      ></Input>\r\n\r\n      <ErrorMessage component={FormFeedback} name={name}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  options: PropTypes.array,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  options: [],\r\n  disabled: false,\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { field, form, label, options, placeholder, disabled } = props;\r\n  const { name, value } = field;\r\n  const selectedOptions = options.find((option) => option.value === value);\r\n  const { errors, touched } = form;\r\n  const showErrors = errors[name] && touched[name];\r\n\r\n  const handleSelectedOptionChange = (selectedOptions) => {\r\n    const selectedValue = selectedOptions\r\n      ? selectedOptions.value\r\n      : selectedOptions;\r\n\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <Select\r\n        id={name}\r\n        {...field}\r\n        value={selectedOptions}\r\n        onChange={handleSelectedOptionChange}\r\n        disabled={disabled}\r\n        options={options}\r\n        placeholder={placeholder}\r\n        className={showErrors ? \"is-invalid\" : \"\"}\r\n      ></Select>\r\n\r\n      <ErrorMessage component={FormFeedback} name={name} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./RandomPhoto.scss\";\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBLur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: \"\",\r\n  imageUrl: \"\",\r\n  onImageUrlChange: null,\r\n  onRandomButtonBLur: null,\r\n};\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n};\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onRandomButtonBLur, onImageUrlChange } = props;\r\n\r\n  const handleRandomPhotoClick = () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRandomButtonBLur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random Photo\r\n        </Button>\r\n      </div>\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img\r\n            onError={handleRandomPhotoClick}\r\n            src={imageUrl}\r\n            alt=\"ooop... not found\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;\r\n","import RandomPhoto from \"components/RandomPhoto\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n  const { errors, touched } = form;\r\n  const showErrors = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n      />\r\n      <div className={showErrors ? \"is-invalid\" : \"\"} />\r\n\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, FormGroup, Input, Label, Spinner } from \"reactstrap\";\r\nimport { PHOTO_CATEGORY_OPTIONS } from \"constants/global\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport InputField from \"custom-fields/InputField\";\r\nimport SelectField from \"custom-fields/SelectField\";\r\nimport RandomPhotoField from \"custom-fields/RandomPhotoField\";\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"this field is required\"),\r\n\r\n    categoryId: Yup.number().required(\"this field is required\"),\r\n\r\n    photo: Yup.string().required(\"this field is required\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={props.onSubmit}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {(formikProps) => {\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              label=\"Title\"\r\n              placeholder=\"Eg: wow ...\"\r\n            />\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              placeholder=\"what's your photo category\"\r\n              label=\"Category\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color={isAddMode ? \"primary\" : \"success\"}>\r\n                {isSubmitting && <Spinner size=\"sm\" />}\r\n                {isAddMode ? \"Add to album\" : \"Update your photo\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import Banner from \"components/Banner\";\r\nimport Images from \"constants/images\";\r\nimport PhotoForm from \"features/Photo/components/PhotoForm\";\r\nimport { addPhoto, updatePhoto } from \"features/Photo/PhotoSlice\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { randomNumber } from \"utils/common\";\r\nimport \"./styles.scss\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editPhoto = useSelector((state) =>\r\n    state.photos.find((x) => x.id === +photoId)\r\n  );\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editPhoto;\r\n\r\n  const handleSubmit = (value) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const newPhoto = {\r\n            ...value,\r\n            id: randomNumber(10000, 99999),\r\n          };\r\n\r\n          const action = addPhoto(newPhoto);\r\n          dispatch(action);\r\n        } else {\r\n          const action = updatePhoto(value);\r\n          dispatch(action);\r\n        }\r\n\r\n        history(\"/photos/\");\r\n        resolve(true);\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner\r\n        title=\"Pick your amazing photo\"\r\n        backgroundUrl={Images.ORANGE_BG}\r\n      />\r\n\r\n      <div className=\"photo-edit__form\">\r\n        <PhotoForm\r\n          onSubmit={handleSubmit}\r\n          isAddMode={isAddMode}\r\n          initialValues={initialValues}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","export const randomNumber = (min, max) => {\r\n  return min + Math.trunc(Math.random() * (max - min));\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport MainPage from \"./pages/Main\";\r\nimport AddEditPage from \"./pages/AddEdit\";\r\nimport NotFound from \"components/NotFound\";\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<MainPage />} />\r\n\r\n      <Route path=\"add\" element={<AddEditPage />} />\r\n      <Route path=\":photoId\" element={<AddEditPage />} />\r\n\r\n      <Route path=\"*\" element={<NotFound />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","outline","size","color","onClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","map","xs","md","lg","photos","useSelector","state","history","useNavigate","dispatch","useDispatch","Images","to","removeId","id","action","removePhoto","editPhotoUrl","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","errors","touched","showErrors","for","invalid","component","FormFeedback","SelectField","options","selectedOptions","find","option","onChange","selectedValue","changeEvent","target","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBLur","handleRandomPhotoClick","randomImageUrl","randomId","Math","trunc","random","getRandomImageUrl","onBlur","onError","RandomPhotoField","newImageUrl","setFieldValue","onRandomButtonBlur","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","onSubmit","formikProps","values","isSubmitting","console","log","photoId","useParams","editPhoto","x","Promise","resolve","setTimeout","newPhoto","min","max","addPhoto","updatePhoto","path","element","Main","AddEdit","NotFound"],"sourceRoot":""}